plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'jacoco'
}

apply plugin: 'jacoco'

group 'ee.taltech'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    runtimeOnly 'com.h2database:h2'

    compile 'io.springfox:springfox-boot-starter:3.0.0'
    compile "org.springframework.boot:spring-boot-configuration-processor"
    compile 'org.apache.commons:commons-collections4:4.4'
    compile 'org.apache.commons:commons-lang3:3.11'

    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

check.dependsOn(
        test,
        jacocoTestReport,
        jacocoTestCoverageVerification
)

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'BUNDLE'
            limit {
                counter = 'COMPLEXITY'
                value = 'COVEREDRATIO'
                minimum = 0.20
            }
        }
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

bootJar {
    archiveFileName = 'hotel-trivago-backend.jar'
}

